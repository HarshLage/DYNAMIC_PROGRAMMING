#include <iostream>
#include<vector>
using namespace std;
int solveMemo(int n , int k , vector<int>&dp){
  if(n==1) return k;
  if(n==2) return (k + k*(k-1));

  if(dp[n]!=-1) return dp[n];

  dp[n] = (solveMemo(n-1,k,dp) + solveMemo(n-2,k,dp)) * (k-1);
  return dp[n];
}
int tabulation(int n , int k ){
  vector<int>dp(n+1,-1);
  dp[1] = k;
  dp[2] = k + k*(k-1);

  
  for(int i=3;i<=n;i++){
  dp[i] = (dp[i-1] + dp[i-2]) * (k-1) ;
  }
  return dp[n];
}
int space(int n , int k){
  int prev2 = k;
  int prev1 = k + k*(k-1);

  int curr =0;
  for(int i=3;i<=n;i++){
    curr = (prev2 + prev1) * (k-1);
    prev2 = prev1;
    prev1 = curr;
  }
  return curr;
}
int main() {
  int n = 3;
  int k = 3;
  vector<int>dp(n+1,-1);
  int answer = solveMemo(n,k,dp);
  int tab = tabulation(n,k);
  int s = space(n,k);
  cout<<s<<endl;
}
